{"ast":null,"code":"var _jsxFileName = \"/Users/aaronleek/Desktop/coding-projects/misc-projects/quick-hack-nw/Jonald - Hack/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport Slider from 'react-slick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninject();\n\n// the handleSubmit front-end needs to be modified to call handleRequest if radio button is toggled yes. \n\n// envs\nconst orgId = process.env.ORG_ID;\nconst apiKey = \"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\";\nfunction App() {\n  _s();\n  // statehooks\n  const [query, setQuery] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [searchLiveInfo, setSearchLiveInfo] = useState(false);\n  const [search, setSearch] = useState(\"Search\");\n  const [count, setCount] = useState(0);\n\n  //open ai auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n  const [details, setDetails] = useState(\"\");\n  const [style, setStyle] = useState(\"\");\n  const [brands, setBrands] = useState(\"\");\n\n  // First completion, sets the context as Kari.ai personality.\n  async function getInitialCompletion(query) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Purpose: Take in the user's information and give a response. You generate a tweet calendar for the user.\n      Name: Jonald\n\n      Information passed in\n      Product Details: ${details}\n      Style: ${style}\n      Brands to Mimick: ${brands}\n      `,\n      max_tokens: 2048,\n      temperature: .6,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n  // Second completion, mainly just responds to messages in a conversational manner.\n  async function getContextCompletion(query, messages) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Don't mention outright: Conversational Style, Context, Instructions.\n      Instructions: view the chatLog for context and respond to the latest message.\n      Context: You are an artificial financial advisor named Kari. \n\n      latestMessage: ${query}\n      chatLog: ${messages}\n      `,\n      max_tokens: 512,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // clearChat button function\n  function clearChat() {\n    setCount(0);\n    setChatLog([]);\n    setShowOverlay(true);\n    setBrands(\"\");\n    setStyle(\"\");\n    setDetails(\"\");\n  }\n\n  // if messages array is empty, call getInitialCompletion\n  // if messages array is not empty, call getContextCompletion\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (query.trim() && query.length > 4) {\n      let liveInfoResponse;\n      if (searchLiveInfo === true) {\n        console.log(\"Getting live Info Now\");\n        liveInfoResponse = await getLiveInfo(query);\n        console.log(liveInfoResponse);\n      } else {\n        console.log(\"User did not request live info\");\n      }\n      let chatLogNew = [...chatLog, {\n        user: \"me\",\n        message: `${query}` + (liveInfoResponse ? ` ${liveInfoResponse}` : \"\")\n      }];\n      setQuery(\"\");\n      setChatLog(chatLogNew);\n      setShowOverlay(false);\n      const messages = chatLogNew.map(message => message.message).join(\"\");\n      let data;\n      if (count === 0) {\n        console.log(\"Getting initial completion\");\n        data = await getInitialCompletion(messages);\n        setCount(count + 1);\n      } else {\n        console.log(\"Getting context completion\");\n        data = await getContextCompletion(query, messages);\n      }\n      setChatLog([...chatLogNew, {\n        user: \"gpt\",\n        message: `${data}`\n      }]);\n    }\n  }\n  async function getLiveInfo(query) {\n    setSearch(\"Loading...\");\n    var url = `https://kari-platform-node-production.up.railway.app/api_search`;\n    console.log(`Sending ${query} to Server`);\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: {\n          query\n        }\n      })\n    });\n    console.log(response.status);\n    const results = await response.json();\n    console.log(`Response received!`);\n    console.log(results);\n    setSearch(\"Search\");\n    return results;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidemenu-header\",\n        children: \"Jonald\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: \" Clear Chat \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [showOverlay && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"details\",\n          value: details,\n          onChange: e => setDetails(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"style\",\n          value: style,\n          onChange: e => setStyle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"brands\",\n          value: brands,\n          onChange: e => setBrands(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: () => {\n            handleSubmit();\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-screening-tool\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              className: \"chat-input-textarea\",\n              placeholder: \"Ask a question or give a command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: () => {\n                setSearchLiveInfo(false);\n                handleSubmit();\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"below-chatbox\",\n          children: [\"February 1 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/YvjMHj8kPX7xDX2H8\",\n            target: \"_new\",\n            children: \"this form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 134\n          }, this), \" and run through the feedback questions as it will help me a lot.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"Ve4nP7C45yx2sma97jyQLQ22oSE=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","inject","Slider","orgId","process","env","ORG_ID","apiKey","App","query","setQuery","chatLog","setChatLog","showOverlay","setShowOverlay","searchLiveInfo","setSearchLiveInfo","search","setSearch","count","setCount","configuration","openai","details","setDetails","style","setStyle","brands","setBrands","getInitialCompletion","response","createCompletion","model","prompt","max_tokens","temperature","stop","data","choices","text","getContextCompletion","messages","clearChat","handleSubmit","e","preventDefault","trim","length","liveInfoResponse","console","log","getLiveInfo","chatLogNew","user","message","map","join","url","fetch","method","headers","body","JSON","stringify","input","status","results","json","target","value","index","ChatMessage"],"sources":["/Users/aaronleek/Desktop/coding-projects/misc-projects/quick-hack-nw/Jonald - Hack/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css'\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport Slider from 'react-slick';\n\n\ninject();\n\n// the handleSubmit front-end needs to be modified to call handleRequest if radio button is toggled yes. \n\n\n// envs\nconst orgId = process.env.ORG_ID;\nconst apiKey = \"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\";\n\n\nfunction App() {\n\n  // statehooks\n  const [query, setQuery] = useState(\"\");\n  const [chatLog, setChatLog] = useState([])\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [searchLiveInfo, setSearchLiveInfo] = useState(false);\n  const [search, setSearch] = useState(\"Search\");\n  const [count, setCount] = useState(0);\n\n\n  //open ai auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const [details, setDetails] = useState(\"\");\n  const [style, setStyle] = useState(\"\");\n  const [brands, setBrands] = useState(\"\");\n\n// First completion, sets the context as Kari.ai personality.\n  async function getInitialCompletion(query) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Purpose: Take in the user's information and give a response. You generate a tweet calendar for the user.\n      Name: Jonald\n\n      Information passed in\n      Product Details: ${details}\n      Style: ${style}\n      Brands to Mimick: ${brands}\n      `,\n      max_tokens: 2048,\n      temperature: .6,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n// Second completion, mainly just responds to messages in a conversational manner.\n  async function getContextCompletion(query, messages) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Don't mention outright: Conversational Style, Context, Instructions.\n      Instructions: view the chatLog for context and respond to the latest message.\n      Context: You are an artificial financial advisor named Kari. \n\n      latestMessage: ${query}\n      chatLog: ${messages}\n      `,\n      max_tokens: 512,\n      temperature: .5,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n  // clearChat button function\n  function clearChat(){\n    setCount(0);\n    setChatLog([]);\n    setShowOverlay(true);\n    setBrands(\"\");  \n    setStyle(\"\");\n    setDetails(\"\");\n  }\n\n\n  // if messages array is empty, call getInitialCompletion\n  // if messages array is not empty, call getContextCompletion\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (query.trim() && query.length > 4) {\n      let liveInfoResponse;\n      if (searchLiveInfo === (true)) {\n        console.log(\"Getting live Info Now\");\n        liveInfoResponse = await getLiveInfo(query);\n        console.log(liveInfoResponse);\n      } else {\n        console.log(\"User did not request live info\");\n      }\n      let chatLogNew = [...chatLog, { user: \"me\", message: `${query}` + (liveInfoResponse ? ` ${liveInfoResponse}` : \"\")}];\n      setQuery(\"\");\n      setChatLog(chatLogNew);\n      setShowOverlay(false);\n      const messages = chatLogNew.map((message) => message.message).join(\"\");\n      let data;\n      if (count === 0) {\n        console.log(\"Getting initial completion\");\n        data = await getInitialCompletion(messages);\n        setCount(count + 1);\n      } else {\n        console.log(\"Getting context completion\");\n        data = await getContextCompletion(query, messages);\n      }\n      setChatLog([...chatLogNew, { user: \"gpt\", message: `${data}`}]);\n    }\n  }\n  \n\n\n\nasync function getLiveInfo(query) {\n    setSearch(\"Loading...\");\n    var url = `https://kari-platform-node-production.up.railway.app/api_search`;\n    console.log(`Sending ${query} to Server`);\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ input: {query} })\n    });\n    console.log(response.status);\n    const results = await response.json();\n    console.log(`Response received!`);\n    console.log(results);\n    setSearch(\"Search\");\n    return results;\n}\n\nreturn (\n<div className=\"App\">\n<aside className=\"sidemenu\"> \n  <h3 className=\"sidemenu-header\">Jonald</h3>\n   <button className=\"side-menu-button\" onClick={clearChat}> Clear Chat </button> \n   </aside>\n      <section className=\"chatbox\">\n      {showOverlay && (\n        <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              id=\"details\"\n              value={details}\n              onChange={(e) => setDetails(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              id=\"style\"\n              value={style}\n              onChange={(e) => setStyle(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              id=\"brands\"\n              value={brands}\n              onChange={(e) => setBrands(e.target.value)}\n            />\n              <button className=\"submit-button\" onClick={() => {handleSubmit();}}>Send</button>\n        </form>\n        )}\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n    </div>\n    <div className=\"chat-input-holder\">\n    <div className=\"stock-screening-tool\">\n      <form onSubmit={handleSubmit}> \n        <input \n          rows=\"1\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"chat-input-textarea\"\n          placeholder=\"Ask a question or give a command\"></input>\n\n        <button className=\"submit-button\" onClick={() => {setSearchLiveInfo(false); handleSubmit();}}>Send</button>\n      </form>\n    </div>\n  <p className='below-chatbox'>February 1 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out <a href=\"https://forms.gle/YvjMHj8kPX7xDX2H8\" target=\"_new\">this form</a> and run through the feedback questions as it will help me a lot.</p>\n</div>\n</section>\n</div>\n  );\n}\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className=\"clearfix\">\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\n    <div className=\"chat-message-center\">\n    </div> \n    <div className=\"message\">\n      {message.message}\n  </div>\n</div>\n</div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}