{"ast":null,"code":"var _jsxFileName = \"/Users/aaronleek/Desktop/coding-projects/kari-ai/kari-platform/Kari-React-Client/Kari-React-Client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport Slider from 'react-slick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninject();\n\n// the handleSubmit front-end needs to be modified to call handleRequest if radio button is toggled yes. \n\n// envs\nconst orgId = process.env.ORG_ID;\nconst apiKey = \"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\";\nfunction App() {\n  _s();\n  // statehooks\n  const [query, setQuery] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [searchLiveInfo, setSearchLiveInfo] = useState(false);\n  const [search, setSearch] = useState(\"Search\");\n  const [count, setCount] = useState(0);\n\n  //open ai auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // First completion, sets the context as Kari.ai personality.\n  async function getInitialCompletion(query) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Instructions: view the first nessage and respond to it accordingly.\n      Context: You are an artificial financial advisor named Kari. \n      Conversational Style: You are a friendly, helpful, and knowledgeable financial advisor.\n      Formatting: Money in USD, \"$xxx,xxx.xx\". (print out full number, not abbreviated)\n      Abilities: The user can choose to pull in live financial data summaries for you to process. If user asks for live data, you will need to process it. If there is none, you will need to respond accordingly.\n\n      latestMessage: ${query}\n      `,\n      max_tokens: 2048,\n      temperature: .6,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // Second completion, mainly just responds to messages in a conversational manner.\n  async function getContextCompletion(messages) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Don't mention outright: Conversational Style, Context, Instructions.\n      Instructions: view the chatLog for context and respond to the latest message.\n      Context: You are an artificial financial advisor named Kari. \n      Conversational Style: You are a friendly, helpful, and knowledgeable financial advisor.\n      chatLog: ${messages}\n      `,\n      max_tokens: 512,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // clearChat button function\n  function clearChat() {\n    setCount(0);\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n  // if messages array is empty, call getInitialCompletion\n  // if messages array is not empty, call getContextCompletion\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (query.trim() && query.length > 4) {\n      let liveInfoResponse;\n      if (searchLiveInfo === true) {\n        console.log(\"Getting live Info Now\");\n        liveInfoResponse = await getLiveInfo(query);\n        console.log(liveInfoResponse);\n      } else {\n        console.log(\"User did not request live info\");\n      }\n      let chatLogNew = [...chatLog, {\n        user: \"me\",\n        message: `${query}` + (liveInfoResponse ? ` ${liveInfoResponse}` : \"\")\n      }];\n      setQuery(\"\");\n      setChatLog(chatLogNew);\n      setShowOverlay(false);\n      const messages = chatLogNew.map(message => message.message).join(\"\");\n      let data;\n      if (count === 0) {\n        console.log(\"Getting initial completion\");\n        data = await getInitialCompletion(messages);\n        setCount(count + 1);\n      } else {\n        console.log(\"Getting context completion\");\n        data = await getContextCompletion(query, messages);\n      }\n      setChatLog([...chatLogNew, {\n        user: \"gpt\",\n        message: `${data}`\n      }]);\n    }\n  }\n  async function getLiveInfo(query) {\n    setSearch(\"Loading...\");\n    var url = `https://kari-platform-node-production.up.railway.app/api_search`;\n    console.log(`Sending ${query} to Server`);\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: {\n          query\n        }\n      })\n    });\n    console.log(response.status);\n    const results = await response.json();\n    console.log(`Response received!`);\n    console.log(results);\n    setSearch(\"Search\");\n    return results;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidemenu-header\",\n        children: \"Kari\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: \" Clear Chat \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: () => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\"),\n        children: \" Join Waitlist \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [showOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Kari.ai Financial Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-card-columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Example Prompts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setQuery(\"What is the current stock price for SPY?\"),\n              children: \"\\\"What is the current stock price for SPY?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setQuery(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"),\n              children: \"\\\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setQuery(\"What is your name and how can you actually help me with my finances?\"),\n              children: \"\\\"What is your name and how can you actually help me with my finances?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Current Limitations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat may not have access to the most recent data on financial topics.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat does not have access to the user's personal financial situation or other relevant context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat's answers may be limited by the quality and clarity of the prompts it receives.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Future Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Save Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Access to More Financial Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Charting & Data Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"And more!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-screening-tool\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              className: \"chat-input-textarea\",\n              placeholder: \"Ask a question or give a command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: () => {\n                setSearchLiveInfo(false);\n                handleSubmit();\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: () => {\n                setSearchLiveInfo(true);\n                handleSubmit();\n              },\n              children: search\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"below-chatbox\",\n          children: [\"February 1 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/YvjMHj8kPX7xDX2H8\",\n            target: \"_new\",\n            children: \"this form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 134\n          }, this), \" and run through the feedback questions as it will help me a lot.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n// array text strings to display\n_s(App, \"F3DPcen//OUW4M5MQg9dyxigBso=\");\n_c = App;\nconst text = [\"Compare the stocks TSLA, AAPL, MCD\", \"Compare Ford, General Motors, and Tesla's price performance on January 25, 2023.\", \"What are the fundamentals of bitcoin?\", \"What is the max supply of Avalanche?\", \"What is the market dominance of Ethereum?\", \"How has the SPY performed over the last year?\", \"How has Microsoft performed between jan 2019 and jan 2020?\", \"Get me historical performance for SPY over the last week\", \"What is the current price of SPY?\", \"What are the latest price movements of AMZN?\", \"What the current volume traded for SPY?\", \"What is the current interest rate for the US?\", \"What is the total population of the US?\", \"What is the annual population growth of the US?\", \"What is the current inflation rate of the US?\", \"What is the current CPI for the US?\", \"What is the current GDP of the US?\", \"What is the current GDP per capita of the US?\", \"What is the GDP growth of the US this year?\", \"What is the current debt to GDP ratio?\", \"What is the current GNI?\", \"What is the current GNI per capita?\", \"What is the current fertility rate of the US?\", \"What is the current unemployment rate?\", \"Get me the latest balance sheet for AAPL\", \"Get me the latest income statement for AAPL\", \"Get me the latest cash flow statement for AAPL\", \"Get me the latest statement of shareholders equity for AAPL\", \"How much did Apple earn this year?\", \"How much cash does AAPL have on its balance sheet?\", \"How much cash flow came from investing activities for AAPL\"];\n// react component that displays the various text strings in array text in a carousel fashion\n\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","inject","Slider","orgId","process","env","ORG_ID","apiKey","App","query","setQuery","chatLog","setChatLog","showOverlay","setShowOverlay","searchLiveInfo","setSearchLiveInfo","search","setSearch","count","setCount","configuration","openai","getInitialCompletion","response","createCompletion","model","prompt","max_tokens","temperature","stop","data","choices","text","getContextCompletion","messages","clearChat","handleSubmit","e","preventDefault","trim","length","liveInfoResponse","console","log","getLiveInfo","chatLogNew","user","message","map","join","url","fetch","method","headers","body","JSON","stringify","input","status","results","json","window","open","index","target","value","ChatMessage"],"sources":["/Users/aaronleek/Desktop/coding-projects/kari-ai/kari-platform/Kari-React-Client/Kari-React-Client/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css'\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport Slider from 'react-slick';\n\n\ninject();\n\n// the handleSubmit front-end needs to be modified to call handleRequest if radio button is toggled yes. \n\n\n// envs\nconst orgId = process.env.ORG_ID;\nconst apiKey = \"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\";\n\n\nfunction App() {\n\n  // statehooks\n  const [query, setQuery] = useState(\"\");\n  const [chatLog, setChatLog] = useState([])\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [searchLiveInfo, setSearchLiveInfo] = useState(false);\n  const [search, setSearch] = useState(\"Search\");\n  const [count, setCount] = useState(0);\n\n\n  //open ai auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n// First completion, sets the context as Kari.ai personality.\n  async function getInitialCompletion(query) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Instructions: view the first nessage and respond to it accordingly.\n      Context: You are an artificial financial advisor named Kari. \n      Conversational Style: You are a friendly, helpful, and knowledgeable financial advisor.\n      Formatting: Money in USD, \"$xxx,xxx.xx\". (print out full number, not abbreviated)\n      Abilities: The user can choose to pull in live financial data summaries for you to process. If user asks for live data, you will need to process it. If there is none, you will need to respond accordingly.\n\n      latestMessage: ${query}\n      `,\n      max_tokens: 2048,\n      temperature: .6,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n// Second completion, mainly just responds to messages in a conversational manner.\n  async function getContextCompletion(messages) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\n      Don't mention outright: Conversational Style, Context, Instructions.\n      Instructions: view the chatLog for context and respond to the latest message.\n      Context: You are an artificial financial advisor named Kari. \n      Conversational Style: You are a friendly, helpful, and knowledgeable financial advisor.\n      chatLog: ${messages}\n      `,\n      max_tokens: 512,\n      temperature: .5,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n  // clearChat button function\n  function clearChat(){\n    setCount(0);\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n\n  // if messages array is empty, call getInitialCompletion\n  // if messages array is not empty, call getContextCompletion\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (query.trim() && query.length > 4) {\n      let liveInfoResponse;\n      if (searchLiveInfo === (true)) {\n        console.log(\"Getting live Info Now\");\n        liveInfoResponse = await getLiveInfo(query);\n        console.log(liveInfoResponse);\n      } else {\n        console.log(\"User did not request live info\");\n      }\n      let chatLogNew = [...chatLog, { user: \"me\", message: `${query}` + (liveInfoResponse ? ` ${liveInfoResponse}` : \"\")}];\n      setQuery(\"\");\n      setChatLog(chatLogNew);\n      setShowOverlay(false);\n      const messages = chatLogNew.map((message) => message.message).join(\"\");\n      let data;\n      if (count === 0) {\n        console.log(\"Getting initial completion\");\n        data = await getInitialCompletion(messages);\n        setCount(count + 1);\n      } else {\n        console.log(\"Getting context completion\");\n        data = await getContextCompletion(query, messages);\n      }\n      setChatLog([...chatLogNew, { user: \"gpt\", message: `${data}`}]);\n    }\n  }\n  \n\n\n\nasync function getLiveInfo(query) {\n    setSearch(\"Loading...\");\n    var url = `https://kari-platform-node-production.up.railway.app/api_search`;\n    console.log(`Sending ${query} to Server`);\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ input: {query} })\n    });\n    console.log(response.status);\n    const results = await response.json();\n    console.log(`Response received!`);\n    console.log(results);\n    setSearch(\"Search\");\n    return results;\n}\n\n  return (\n    <div className=\"App\">\n<aside className=\"sidemenu\"> \n  <h3 className=\"sidemenu-header\">Kari</h3>\n   <button className=\"side-menu-button\" onClick={clearChat}> Clear Chat </button> \n   <button className=\"side-menu-button\" onClick={() => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\")}> Join Waitlist </button> \n   </aside>\n      <section className=\"chatbox\">\n      {showOverlay && (\n          <div className=\"overlay-card\">\n            <div>\n              <h2>Kari.ai Financial Advisor</h2>\n            </div>\n\n          <div className=\"overlay-card-columns\">\n            <div className=\"overlay-card-column-example\">\n              <h3>Example Prompts:</h3>\n              <p onClick={() => setQuery(\"What is the current stock price for SPY?\")}>\"What is the current stock price for SPY?\"</p>\n              <p onClick={() => setQuery(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\")}>\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"</p>\n              <p onClick={() => setQuery(\"What is your name and how can you actually help me with my finances?\")}>\"What is your name and how can you actually help me with my finances?\"</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Current Limitations:</h3>\n              <p>The chat may not have access to the most recent data on financial topics.</p>\n              <p>The chat does not have access to the user's personal financial situation or other relevant context.</p>\n              <p>The chat's answers may be limited by the quality and clarity of the prompts it receives.</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Future Features:</h3>\n              <p>Save Threads</p>\n              <p>Access to More Financial Data</p>\n              <p>Charting & Data Visualization</p>\n              <p>And more!</p>\n            </div>\n          </div>\n        </div>        \n        )}\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n    </div>\n    <div className=\"chat-input-holder\">\n    <div className=\"stock-screening-tool\">\n      <form onSubmit={handleSubmit}> \n        <input \n          rows=\"1\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"chat-input-textarea\"\n          placeholder=\"Ask a question or give a command\"></input>\n\n        <button className=\"submit-button\" onClick={() => {setSearchLiveInfo(false); handleSubmit();}}>Send</button>\n        <button className=\"submit-button\" onClick={() => {setSearchLiveInfo(true); handleSubmit()}}>{search}</button>\n      </form>\n    </div>\n  <p className='below-chatbox'>February 1 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out <a href=\"https://forms.gle/YvjMHj8kPX7xDX2H8\" target=\"_new\">this form</a> and run through the feedback questions as it will help me a lot.</p>\n</div>\n</section>\n</div>\n  );\n}\n// array text strings to display\n\nconst text = [\n  \"Compare the stocks TSLA, AAPL, MCD\",\n  \"Compare Ford, General Motors, and Tesla's price performance on January 25, 2023.\",\n  \"What are the fundamentals of bitcoin?\",\n  \"What is the max supply of Avalanche?\",\n  \"What is the market dominance of Ethereum?\",\n  \"How has the SPY performed over the last year?\",\n  \"How has Microsoft performed between jan 2019 and jan 2020?\",\n  \"Get me historical performance for SPY over the last week\",\n  \"What is the current price of SPY?\",\n  \"What are the latest price movements of AMZN?\",\n  \"What the current volume traded for SPY?\",\n  \"What is the current interest rate for the US?\",\n  \"What is the total population of the US?\",\n  \"What is the annual population growth of the US?\",\n  \"What is the current inflation rate of the US?\",\n  \"What is the current CPI for the US?\",\n  \"What is the current GDP of the US?\",\n  \"What is the current GDP per capita of the US?\",\n  \"What is the GDP growth of the US this year?\",\n  \"What is the current debt to GDP ratio?\",\n  \"What is the current GNI?\",\n  \"What is the current GNI per capita?\",\n  \"What is the current fertility rate of the US?\",\n  \"What is the current unemployment rate?\",\n  \"Get me the latest balance sheet for AAPL\",\n  \"Get me the latest income statement for AAPL\",\n  \"Get me the latest cash flow statement for AAPL\",\n  \"Get me the latest statement of shareholders equity for AAPL\",\n  \"How much did Apple earn this year?\",\n  \"How much cash does AAPL have on its balance sheet?\",\n  \"How much cash flow came from investing activities for AAPL\"\n]\n// react component that displays the various text strings in array text in a carousel fashion\n\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className=\"clearfix\">\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\n    <div className=\"chat-message-center\">\n    </div> \n    <div className=\"message\">\n      {message.message}\n  </div>\n</div>\n</div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}