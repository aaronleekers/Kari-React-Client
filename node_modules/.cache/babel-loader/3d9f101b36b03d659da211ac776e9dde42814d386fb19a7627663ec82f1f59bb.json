{"ast":null,"code":"var _jsxFileName = \"/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninject();\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\";\nconst apiKey = \"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\";\nconst eodApi = \"63a2477acc2587.58203009\";\nfunction App() {\n  _s();\n  // state hooks\n  const [stockName, setStockname] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [interval, setInterval] = useState(\"5m\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n  // openAI auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // main prompter, runs off context\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial & investment advisor named Kari. When a user has a response that is non-conversational, simply affirmative, or you don't quite know how to respond to, just talk about your abilities again.  Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .7,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // prompter that takes in stock info\n  async function analyzeData(data, instructions) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial stock & alternative data analyst named Kari. You've been given a string of Stock data, your goal is to analyze it financially and provide insights to the user. Ask one question at a time when lacking helpful context. Here is the prompt: ${instructions} ${JSON.stringify(data)}\"`,\n      max_tokens: 3000,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // function that handles the stock API call, runs it through the analyzeData function, and then updates the chatLog.\n  async function handleAPICall(e) {\n    e.preventDefault();\n    try {\n      setStockname(\"\");\n      setShowOverlay(false);\n      const unixFrom = new Date(from).getTime() / 1000;\n      const unixTo = new Date(to).getTime() / 1000;\n      const response = await axios.get(`https://eodhistoricaldata.com/api/intraday/{stockName}.US?api_token={eodApi}&interval={interval}&fmt=json&from={unixFrom}&to={unixTo}`);\n      const data = response.data;\n\n      // pass the data and instructions to the bot for analysis\n      const botResponse = await analyzeData(data, 'Please provide a brief summary of the data.');\n\n      // update the chat log with the bot's response\n      setChatLog([...chatLog, {\n        user: \"gpt\",\n        message: botResponse\n      }]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  function clearChat() {\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n  // this should be the function that primes the bot with necessary context It will set. Then we will create another function that gets a response from the bot based on the context it already knows.\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (input.trim() && input.length > 4) {\n      let chatLogNew = [...chatLog, {\n        user: \"me\",\n        message: `${input}`\n      }];\n      setInput(\"\");\n      setChatLog(chatLogNew);\n      setShowOverlay(false);\n      const messages = chatLogNew.map(message => message.message).join(\"\");\n      const data = await getCompletion(messages);\n      setChatLog([...chatLogNew, {\n        user: \"gpt\",\n        message: `${data}`\n      }]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidemenu-header\",\n        children: \"Kari\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: () => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\"),\n        children: \"Sign Up for Waitlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [showOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Kari.ai Financial Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-card-columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Example Prompts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the future trends in technology, and who are the biggest players?\"),\n              children: \"\\\"What are the future trends in technology, and who are the biggest players?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"),\n              children: \"\\\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What is your name and how can you actually help me with my finances?\"),\n              children: \"\\\"What is your name and how can you actually help me with my finances?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Current Limitations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat may not have access to the most recent data on financial topics.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat does not have access to the user's personal financial situation or other relevant context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat's answers may be limited by the quality and clarity of the prompts it receives.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Future Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Save Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Access to Live Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Charting & Data Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"And more!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-screening-tool\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAPICall,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: stockName,\n              onChange: e => setStockname(e.target.value),\n              className: \"chat-input-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: handleAPICall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"From: dd/mm/yyyy\",\n            value: from,\n            onChange: e => setFrom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"To: dd/mm/yyyy\",\n            value: to,\n            onChange: e => setFrom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: interval,\n            onChange: e => setInterval(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1m\",\n              children: \"1-minute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5m\",\n              children: \"5-minute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1h\",\n              children: \"1-hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            className: \"chat-input-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"below-chatbox\",\n          children: [\"January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/YvjMHj8kPX7xDX2H8\",\n            target: \"_blank\",\n            children: \"this form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 139\n          }, this), \" and run through the feedback questions as it will help me a lot.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), \"      \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ElUhPXc2nHrEksaSX7NDCcCIjRU=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","inject","axios","orgId","apiKey","eodApi","App","stockName","setStockname","input","setInput","chatLog","setChatLog","showOverlay","setShowOverlay","interval","setInterval","from","setFrom","to","setTo","configuration","openai","getCompletion","message","response","createCompletion","model","prompt","max_tokens","temperature","stop","data","choices","text","analyzeData","instructions","JSON","stringify","handleAPICall","e","preventDefault","unixFrom","Date","getTime","unixTo","get","botResponse","user","error","console","clearChat","handleSubmit","trim","length","chatLogNew","messages","map","join","window","open","index","target","value","ChatMessage"],"sources":["/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css'\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport axios from 'axios';\n\ninject();\n\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\"\nconst apiKey = \"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\"\nconst eodApi = \"63a2477acc2587.58203009\"\n\nfunction App() {\n\n\n  // state hooks\n  const [stockName, setStockname] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([])\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [interval, setInterval] = useState(\"5m\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n\n  // openAI auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // main prompter, runs off context\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial & investment advisor named Kari. When a user has a response that is non-conversational, simply affirmative, or you don't quite know how to respond to, just talk about your abilities again.  Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .7,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n  // prompter that takes in stock info\n  async function analyzeData(data, instructions) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial stock & alternative data analyst named Kari. You've been given a string of Stock data, your goal is to analyze it financially and provide insights to the user. Ask one question at a time when lacking helpful context. Here is the prompt: ${instructions} ${JSON.stringify(data)}\"`,\n      max_tokens: 3000,\n      temperature: .5,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n  // function that handles the stock API call, runs it through the analyzeData function, and then updates the chatLog.\n  async function handleAPICall(e) {\n    e.preventDefault();\n    try {\n\n      setStockname(\"\");\n      setShowOverlay(false);\n\n      const unixFrom = new Date(from).getTime() / 1000;\n      const unixTo = new Date(to).getTime() / 1000;\n\n\n      const response = await axios.get(`https://eodhistoricaldata.com/api/intraday/{stockName}.US?api_token={eodApi}&interval={interval}&fmt=json&from={unixFrom}&to={unixTo}`);\n      const data = response.data;\n      \n      // pass the data and instructions to the bot for analysis\n      const botResponse = await analyzeData(data, 'Please provide a brief summary of the data.');\n      \n      // update the chat log with the bot's response\n      setChatLog([...chatLog, { user: \"gpt\", message: botResponse }]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function clearChat(){\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n\n  \n// this should be the function that primes the bot with necessary context It will set. Then we will create another function that gets a response from the bot based on the context it already knows.\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (input.trim() && input.length > 4) {\n      let chatLogNew = [...chatLog, { user: \"me\", message: `${input}`}]\n      setInput(\"\");\n      setChatLog(chatLogNew);\n      setShowOverlay(false);\n  \n      const messages = chatLogNew.map((message) => message.message).join(\"\")\n  \n      const data = await getCompletion(messages);\n      setChatLog([...chatLogNew, { user: \"gpt\", message: `${data}`}])\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <aside className=\"sidemenu\">\n      <h3 className=\"sidemenu-header\">Kari</h3>\n        <button className=\"side-menu-button\" onClick={clearChat}>\n          Clear Chat\n        </button>\n        <button className=\"side-menu-button\" onClick={() => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\")}>\n  Sign Up for Waitlist\n</button>\n\n      </aside>\n      <section className=\"chatbox\">\n      {showOverlay && (\n          <div className=\"overlay-card\">\n            <div>\n              <h2>Kari.ai Financial Advisor</h2>\n            </div>\n          <div className=\"overlay-card-columns\">\n            <div className=\"overlay-card-column-example\">\n              <h3>Example Prompts:</h3>\n              <p onClick={() => setInput(\"What are the future trends in technology, and who are the biggest players?\")}>\"What are the future trends in technology, and who are the biggest players?\"</p>\n              <p onClick={() => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\")}>\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"</p>\n              <p onClick={() => setInput(\"What is your name and how can you actually help me with my finances?\")}>\"What is your name and how can you actually help me with my finances?\"</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Current Limitations:</h3>\n              <p>The chat may not have access to the most recent data on financial topics.</p>\n              <p>The chat does not have access to the user's personal financial situation or other relevant context.</p>\n              <p>The chat's answers may be limited by the quality and clarity of the prompts it receives.</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Future Features:</h3>\n              <p>Save Threads</p>\n              <p>Access to Live Data</p>\n              <p>Charting & Data Visualization</p>\n              <p>And more!</p>\n            </div>\n          </div>\n        </div>        \n        )}\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n    </div>\n    <div className=\"chat-input-holder\">\n\n      <div className=\"stock-screening-tool\">\n      <form onSubmit={handleAPICall}>\n          <input \n          rows=\"1\"\n          value={stockName}\n          onChange={(e) => setStockname(e.target.value)}\n          className=\"chat-input-textarea\"></input>\n          <button className=\"submit-button\" onClick={handleAPICall}></button>\n        </form>\n        <input \n          placeholder=\"From: dd/mm/yyyy\"\n          value={from}\n          onChange={e => setFrom(e.target.value)}\n          />\n        <input\n          placeholder=\"To: dd/mm/yyyy\"\n          value={to}\n          onChange={e => setFrom(e.target.value)}/>\n        <select value={interval} onChange={e => setInterval(e.target.value)}>\n          <option value=\"1m\">1-minute</option>\n          <option value=\"5m\">5-minute</option>\n          <option value=\"1h\">1-hour</option>\n          </select>\n      </div>\n\n        \n        <form onSubmit={handleSubmit}>\n        <input \n        rows=\"1\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"chat-input-textarea\"></input>\n        <button className=\"submit-button\" onClick={handleSubmit}></button>\n        </form>\n        <p className='below-chatbox'>January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out <a href=\"https://forms.gle/YvjMHj8kPX7xDX2H8\" target=\"_blank\">this form</a> and run through the feedback questions as it will help me a lot.</p>      </div>\n      </section>\n    </div>\n  );\n}\n\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className=\"clearfix\">\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\n    <div className=\"chat-message-center\">\n    </div> \n    <div className=\"message\">\n      {message.message}\n  </div>\n</div>\n</div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}