{"ast":null,"code":"var _jsxFileName = \"/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninject();\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\";\nconst apiKey = \"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\";\nconst eodApi = \"63a2477acc2587.58203009\";\nfunction App() {\n  _s();\n  // state hooks\n  const [stockName, setStockname] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [interval, setInterval] = useState(\"5m\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n  // openAI auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // main prompter, runs off context\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial & investment advisor named Kari. When a user has a response that is non-conversational, simply affirmative, or you don't quite know how to respond to, just talk about your abilities again.  Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .7,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // prompter that standardizes the stock queries into normalized inputs\n  async function standardizeInput() {\n    try {\n      const evaluation = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: `Is this input related to a live stock price? \"${input}\"`,\n        max_tokens: 50,\n        temperature: .5,\n        stop: \"/n\"\n      });\n      console.log(evaluation);\n      const evaluationText = evaluation.data.choices[0].text.toLowerCase();\n      console.log(evaluationText);\n      let standardizedInput;\n      if (evaluationText.includes(\"yes\")) {\n        const reformattedInput = await openai.createCompletion({\n          model: \"text-davinci-002\",\n          prompt: `Reformat this input so it can be read by my script that can match against a pattern. The desired format is: \"Get me stock information for [STOCK] from [FROM-DATE] to [TO-DATE] at [1-minute-intervals, 5-MINUTE-INTERVALS, 1-HOUR-INTERVALS]. \"${input}\"`,\n          max_tokens: 500,\n          temperature: .8,\n          stop: \"/n\"\n        });\n        console.log(reformattedInput);\n        standardizedInput = reformattedInput.data.choices[0].text;\n      } else {\n        standardizedInput = input;\n        console.log(standardizedInput);\n      }\n      return standardizedInput; // Return the standardized input\n    } catch (error) {\n      console.error(error);\n      return \"Error occurred while processing input, please try again later.\";\n    }\n  }\n\n  // prompter that takes in stock info\n  async function analyzeData(data, instructions) {\n    const response = await openai.createCompletion({\n      model: \"text-curie-001\",\n      prompt: `Make sure to round decimals to 2 places thanks babe. ${input} ${stockName} ${from} ${to} ${interval} ${JSON.stringify(data)}\"`,\n      max_tokens: 2048,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n  // this should be the function that primes the bot with necessary context It will set. Then we will create another function that gets a response from the bot based on the context it already knows.\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog];\n    setInput(\"\");\n    setStockname(\"\");\n    setTo(\"\");\n    setFrom(\"\");\n    setInterval(\"\");\n    setShowOverlay(false);\n    const standardizedInput = await standardizeInput();\n    console.log(standardizedInput);\n    const pattern = /(?<stockName>\\b[A-Z]+\\b).*(?<fromDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<toDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<interval>\\b\\d{1}-minute\\b)/;\n    const match = standardizedInput.match(pattern);\n    if (match) {\n      const stockName = match.groups.stockName;\n      const from = match.groups.fromDate;\n      const to = match.groups.toDate;\n      const interval = match.groups.interval;\n      console.log(stockName); // TSLA\n      console.log(from); // 01/01/2021\n      console.log(to); // 05/31/2021\n      console.log(interval); // 5-minute\n    } else {\n      console.log(\"Regular expression did not match input.\");\n    }\n  }\n  function clearChat() {\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidemenu-header\",\n        children: \"Kari\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: \" Clear Chat \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: () => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\"),\n        children: \" Sign Up for Waitlist \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: () => window.open(\"src/components/stockAnalysis.js\"),\n        children: \" Stock Analysis Tool \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 4\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [showOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Kari.ai Financial Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-card-columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Example Prompts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the future trends in technology, and who are the biggest players?\"),\n              children: \"\\\"What are the future trends in technology, and who are the biggest players?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"),\n              children: \"\\\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What is your name and how can you actually help me with my finances?\"),\n              children: \"\\\"What is your name and how can you actually help me with my finances?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Current Limitations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat may not have access to the most recent data on financial topics.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat does not have access to the user's personal financial situation or other relevant context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat's answers may be limited by the quality and clarity of the prompts it receives.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Future Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Save Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Access to Live Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Charting & Data Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"And more!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-screening-tool\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: stockName,\n              onChange: e => setStockname(e.target.value),\n              className: \"chat-input-textarea\",\n              placeholder: \"Enter Stock Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"From: dd/mm/yyyy\",\n              value: from,\n              onChange: e => setFrom(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"To: dd/mm/yyyy\",\n              value: to,\n              onChange: e => setTo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: interval,\n              onChange: e => setInterval(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1m\",\n                children: \"1-minute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5m\",\n                children: \"5-minute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1h\",\n                children: \"1-hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              className: \"chat-input-textarea\",\n              placeholder: \"Ask a question or give a command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: () => {\n                handleSubmit();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"below-chatbox\",\n          children: [\"January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/YvjMHj8kPX7xDX2H8\",\n            target: \"_new\",\n            children: \"this form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 133\n          }, this), \" and run through the feedback questions as it will help me a lot.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ElUhPXc2nHrEksaSX7NDCcCIjRU=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","inject","orgId","apiKey","eodApi","App","stockName","setStockname","input","setInput","chatLog","setChatLog","showOverlay","setShowOverlay","interval","setInterval","from","setFrom","to","setTo","configuration","openai","getCompletion","message","response","createCompletion","model","prompt","max_tokens","temperature","stop","data","choices","text","standardizeInput","evaluation","console","log","evaluationText","toLowerCase","standardizedInput","includes","reformattedInput","error","analyzeData","instructions","JSON","stringify","handleSubmit","e","preventDefault","chatLogNew","pattern","match","groups","fromDate","toDate","clearChat","window","open","map","index","target","value","ChatMessage","user"],"sources":["/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css'\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\n\ninject();\n\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\"\nconst apiKey = \"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\"\nconst eodApi = \"63a2477acc2587.58203009\"\n\nfunction App() {\n\n\n  // state hooks\n  const [stockName, setStockname] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([])\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [interval, setInterval] = useState(\"5m\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n\n  // openAI auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // main prompter, runs off context\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial & investment advisor named Kari. When a user has a response that is non-conversational, simply affirmative, or you don't quite know how to respond to, just talk about your abilities again.  Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .7,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n    // prompter that standardizes the stock queries into normalized inputs\n    async function standardizeInput() {\n      try {\n          const evaluation = await openai.createCompletion({\n              model: \"text-davinci-002\",\n              prompt: `Is this input related to a live stock price? \"${input}\"`,\n              max_tokens: 50,\n              temperature: .5,\n              stop: \"/n\",\n          });\n          console.log(evaluation)\n          const evaluationText = evaluation.data.choices[0].text.toLowerCase();\n          console.log(evaluationText);\n          let standardizedInput; \n          if (evaluationText.includes(\"yes\")) {\n              const reformattedInput = await openai.createCompletion({\n                  model: \"text-davinci-002\",\n                  prompt: `Reformat this input so it can be read by my script that can match against a pattern. The desired format is: \"Get me stock information for [STOCK] from [FROM-DATE] to [TO-DATE] at [1-minute-intervals, 5-MINUTE-INTERVALS, 1-HOUR-INTERVALS]. \"${input}\"`,\n                  max_tokens: 500,\n                  temperature: .8,\n                  stop: \"/n\",\n              });\n              console.log(reformattedInput);\n\n              standardizedInput = reformattedInput.data.choices[0].text;\n          } else {\n              standardizedInput = input;\n              console.log(standardizedInput);\n          }\n          return standardizedInput; // Return the standardized input\n      } catch (error) {\n          console.error(error);\n          return \"Error occurred while processing input, please try again later.\";\n      }\n  }\n    \n  // prompter that takes in stock info\n  async function analyzeData(data, instructions) {\n    const response = await openai.createCompletion({\n      model: \"text-curie-001\",\n      prompt: `Make sure to round decimals to 2 places thanks babe. ${input} ${stockName} ${from} ${to} ${interval} ${JSON.stringify(data)}\"`,\n      max_tokens: 2048,\n      temperature: .5,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n// this should be the function that primes the bot with necessary context It will set. Then we will create another function that gets a response from the bot based on the context it already knows.\nasync function handleSubmit(e) {\n  e.preventDefault();\n    let chatLogNew = [...chatLog];\n\n    setInput(\"\");\n    setStockname(\"\");\n    setTo(\"\");\n    setFrom(\"\");\n    setInterval(\"\");\n    setShowOverlay(false);\n\n    const standardizedInput = await standardizeInput();\n    console.log(standardizedInput);\n    const pattern = /(?<stockName>\\b[A-Z]+\\b).*(?<fromDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<toDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<interval>\\b\\d{1}-minute\\b)/;\n    const match = standardizedInput.match(pattern);\n\nif (match) {\n  const stockName = match.groups.stockName;\n  const from = match.groups.fromDate;\n  const to = match.groups.toDate;\n  const interval = match.groups.interval;\n\n  console.log(stockName); // TSLA\n  console.log(from); // 01/01/2021\n  console.log(to); // 05/31/2021\n  console.log(interval); // 5-minute\n} else {\n  console.log(\"Regular expression did not match input.\");\n}\n\n}\n\n  function clearChat(){\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n  return (\n    <div className=\"App\">\n<aside className=\"sidemenu\"> \n  <h3 className=\"sidemenu-header\">Kari</h3>\n   <button className=\"side-menu-button\" onClick={clearChat}> Clear Chat </button> \n   <button className=\"side-menu-button\" onClick={() => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\")}> Sign Up for Waitlist </button> \n   <button className=\"side-menu-button\" onClick={() => window.open(\"src/components/stockAnalysis.js\")}> Stock Analysis Tool </button> </aside>\n      <section className=\"chatbox\">\n      {showOverlay && (\n          <div className=\"overlay-card\">\n            <div>\n              <h2>Kari.ai Financial Advisor</h2>\n            </div>\n          <div className=\"overlay-card-columns\">\n            <div className=\"overlay-card-column-example\">\n              <h3>Example Prompts:</h3>\n              <p onClick={() => setInput(\"What are the future trends in technology, and who are the biggest players?\")}>\"What are the future trends in technology, and who are the biggest players?\"</p>\n              <p onClick={() => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\")}>\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"</p>\n              <p onClick={() => setInput(\"What is your name and how can you actually help me with my finances?\")}>\"What is your name and how can you actually help me with my finances?\"</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Current Limitations:</h3>\n              <p>The chat may not have access to the most recent data on financial topics.</p>\n              <p>The chat does not have access to the user's personal financial situation or other relevant context.</p>\n              <p>The chat's answers may be limited by the quality and clarity of the prompts it receives.</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Future Features:</h3>\n              <p>Save Threads</p>\n              <p>Access to Live Data</p>\n              <p>Charting & Data Visualization</p>\n              <p>And more!</p>\n            </div>\n          </div>\n        </div>        \n        )}\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n    </div>\n    <div className=\"chat-input-holder\">\n  <div className=\"stock-screening-tool\">\n    <form onSubmit={handleSubmit}>\n      <input \n        rows=\"1\"\n        value={stockName}\n        onChange={(e) => setStockname(e.target.value)}\n        className=\"chat-input-textarea\"\n        placeholder=\"Enter Stock Name\"\n      />\n      <input \n        placeholder=\"From: dd/mm/yyyy\"\n        value={from}\n        onChange={e => setFrom(e.target.value)}\n      />\n      <input\n        placeholder=\"To: dd/mm/yyyy\"\n        value={to}\n        onChange={e => setTo(e.target.value)}\n      />\n      <select value={interval} onChange={e => setInterval(e.target.value)}>\n        <option value=\"1m\">1-minute</option>\n        <option value=\"5m\">5-minute</option>\n        <option value=\"1h\">1-hour</option>\n      </select>\n      <input \n        rows=\"1\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"chat-input-textarea\"\n        placeholder=\"Ask a question or give a command\"\n      />\n      <button className=\"submit-button\" onClick={() => {handleSubmit();}}>Submit</button>\n    </form>\n  </div>\n  <p className='below-chatbox'>January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out <a href=\"https://forms.gle/YvjMHj8kPX7xDX2H8\" target=\"_new\">this form</a> and run through the feedback questions as it will help me a lot.</p>\n</div>\n</section>\n</div>\n  );\n}\n\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className=\"clearfix\">\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\n    <div className=\"chat-message-center\">\n    </div> \n    <div className=\"message\">\n      {message.message}\n  </div>\n</div>\n</div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}