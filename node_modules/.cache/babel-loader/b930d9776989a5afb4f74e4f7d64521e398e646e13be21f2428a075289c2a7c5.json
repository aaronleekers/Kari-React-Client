{"ast":null,"code":"var _jsxFileName = \"/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninject();\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\";\nconst apiKey = \"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\";\nconst eodApi = \"63a2477acc2587.58203009\";\nfunction App() {\n  _s();\n  // state hooks\n  const [stockName, setStockname] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [interval, setInterval] = useState(\"5m\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n  // openAI auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // main prompter, runs off context\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial & investment advisor named Kari. When a user has a response that is non-conversational, simply affirmative, or you don't quite know how to respond to, just talk about your abilities again.  Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .7,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n\n  // prompter that standardizes the stock queries into normalized inputs\n  async function standardizeInput() {\n    const evaluateInput = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"Your goal is to first evaluate the user's input and determine whether it is attempting to get live stock information or not. If it is not asking questions related to a live stock price, reprint the unchanged input back. If you determine that it is, your job is to take the user input and reformat it so it is standardized and can be read by my script that can match against a pattern. So, when a user is trying to get info about a stock during a specific time range, format it like this. \"Get me stock information for [STOCK] from [FROM-DATE] to [TO-DATE] at [1-minute-intervals, 5-MINUTE-INTERVALS, 1-HOUR-INTERVALS]. Here is the input:${input}\"`,\n      max_tokens: 500,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return evaluateInput.data.choices[0].text;\n  }\n\n  // prompter that takes in stock info\n  async function analyzeData(data, instructions) {\n    const response = await openai.createCompletion({\n      model: \"text-curie-001\",\n      prompt: `Make sure to round decimals to 2 places thanks babe. ${input} ${stockName} ${from} ${to} ${interval} ${JSON.stringify(data)}\"`,\n      max_tokens: 2048,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n  // this should be the function that primes the bot with necessary context It will set. Then we will create another function that gets a response from the bot based on the context it already knows.\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog];\n    setInput(\"\");\n    setStockname(\"\");\n    setTo(\"\");\n    setFrom(\"\");\n    setInterval(\"\");\n    setShowOverlay(false);\n    const standardInput = await standardizeInput();\n    const pattern = /(?<stockName>\\b[A-Z]+\\b).*(?<fromDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<toDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<interval>\\b\\d{1}-minute\\b)/;\n    const match = standardInput.match(pattern);\n    const stockName = match.groups.stockName;\n    const from = match.groups.fromDate;\n    const to = match.groups.toDate;\n    const interval = match.groups.interval;\n    console.log(stockName); // TSLA\n    console.log(from); // 01/01/2021\n    console.log(to); // 05/31/2021\n    console.log(interval); // 5-minute\n\n    if (input.trim() && input.length > 4) {\n      chatLogNew.push({\n        user: \"me\",\n        message: `${input}`\n      });\n      const messages = chatLogNew.map(message => message.message).join(\"\");\n      const data = await getCompletion(messages);\n      chatLogNew.push({\n        user: \"gpt\",\n        message: `${data}`\n      });\n    }\n    setChatLog(chatLogNew);\n  }\n  function clearChat() {\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidemenu-header\",\n        children: \"Kari\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: \" Clear Chat \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: () => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\"),\n        children: \" Sign Up for Waitlist \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: () => window.open(\"src/components/stockAnalysis.js\"),\n        children: \" Stock Analysis Tool \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 4\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [showOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Kari.ai Financial Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-card-columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Example Prompts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the future trends in technology, and who are the biggest players?\"),\n              children: \"\\\"What are the future trends in technology, and who are the biggest players?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"),\n              children: \"\\\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What is your name and how can you actually help me with my finances?\"),\n              children: \"\\\"What is your name and how can you actually help me with my finances?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Current Limitations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat may not have access to the most recent data on financial topics.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat does not have access to the user's personal financial situation or other relevant context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat's answers may be limited by the quality and clarity of the prompts it receives.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Future Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Save Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Access to Live Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Charting & Data Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"And more!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-screening-tool\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: stockName,\n              onChange: e => setStockname(e.target.value),\n              className: \"chat-input-textarea\",\n              placeholder: \"Enter Stock Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"From: dd/mm/yyyy\",\n              value: from,\n              onChange: e => setFrom(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"To: dd/mm/yyyy\",\n              value: to,\n              onChange: e => setTo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: interval,\n              onChange: e => setInterval(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1m\",\n                children: \"1-minute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5m\",\n                children: \"5-minute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1h\",\n                children: \"1-hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              rows: \"1\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              className: \"chat-input-textarea\",\n              placeholder: \"Ask a question or give a command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: () => {\n                handleSubmit();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"below-chatbox\",\n          children: [\"January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/YvjMHj8kPX7xDX2H8\",\n            target: \"_new\",\n            children: \"this form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 133\n          }, this), \" and run through the feedback questions as it will help me a lot.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ElUhPXc2nHrEksaSX7NDCcCIjRU=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","inject","orgId","apiKey","eodApi","App","stockName","setStockname","input","setInput","chatLog","setChatLog","showOverlay","setShowOverlay","interval","setInterval","from","setFrom","to","setTo","configuration","openai","getCompletion","message","response","createCompletion","model","prompt","max_tokens","temperature","stop","data","choices","text","standardizeInput","evaluateInput","analyzeData","instructions","JSON","stringify","handleSubmit","e","preventDefault","chatLogNew","standardInput","pattern","match","groups","fromDate","toDate","console","log","trim","length","push","user","messages","map","join","clearChat","window","open","index","target","value","ChatMessage"],"sources":["/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css'\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\n\ninject();\n\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\"\nconst apiKey = \"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\"\nconst eodApi = \"63a2477acc2587.58203009\"\n\nfunction App() {\n\n\n  // state hooks\n  const [stockName, setStockname] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([])\n  const [showOverlay, setShowOverlay] = useState(true);\n  const [interval, setInterval] = useState(\"5m\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n\n  // openAI auth\n  const configuration = new Configuration({\n    orgId: orgId,\n    apiKey: apiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  // main prompter, runs off context\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial & investment advisor named Kari. When a user has a response that is non-conversational, simply affirmative, or you don't quite know how to respond to, just talk about your abilities again.  Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .7,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n\n    // prompter that standardizes the stock queries into normalized inputs\n    async function standardizeInput() {\n      const evaluateInput = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: `\"Your goal is to first evaluate the user's input and determine whether it is attempting to get live stock information or not. If it is not asking questions related to a live stock price, reprint the unchanged input back. If you determine that it is, your job is to take the user input and reformat it so it is standardized and can be read by my script that can match against a pattern. So, when a user is trying to get info about a stock during a specific time range, format it like this. \"Get me stock information for [STOCK] from [FROM-DATE] to [TO-DATE] at [1-minute-intervals, 5-MINUTE-INTERVALS, 1-HOUR-INTERVALS]. Here is the input:${input}\"`,\n        max_tokens: 500,\n        temperature: .5,\n        stop: \"/n\",\n      });\n      return evaluateInput.data.choices[0].text;\n    }\n\n\n  // prompter that takes in stock info\n  async function analyzeData(data, instructions) {\n    const response = await openai.createCompletion({\n      model: \"text-curie-001\",\n      prompt: `Make sure to round decimals to 2 places thanks babe. ${input} ${stockName} ${from} ${to} ${interval} ${JSON.stringify(data)}\"`,\n      max_tokens: 2048,\n      temperature: .5,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }\n// this should be the function that primes the bot with necessary context It will set. Then we will create another function that gets a response from the bot based on the context it already knows.\nasync function handleSubmit(e) {\n  e.preventDefault();\n    let chatLogNew = [...chatLog];\n\n    setInput(\"\");\n    setStockname(\"\");\n    setTo(\"\");\n    setFrom(\"\");\n    setInterval(\"\");\n    setShowOverlay(false);\n\n    const standardInput = await standardizeInput();\n\n    const pattern = /(?<stockName>\\b[A-Z]+\\b).*(?<fromDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<toDate>\\b\\d{2}\\/\\d{2}\\/\\d{4}\\b).*(?<interval>\\b\\d{1}-minute\\b)/;\n    const match = standardInput.match(pattern);\n\n    const stockName = match.groups.stockName;\n    const from = match.groups.fromDate;\n    const to = match.groups.toDate;\n    const interval = match.groups.interval;\n\n    console.log(stockName); // TSLA\n    console.log(from); // 01/01/2021\n    console.log(to); // 05/31/2021\n    console.log(interval); // 5-minute\n\n\n\n     \n    if (input.trim() && input.length > 4) {\n      chatLogNew.push({ user: \"me\", message: `${input}`});\n      const messages = chatLogNew.map((message) => message.message).join(\"\");\n      const data = await getCompletion(messages);\n      chatLogNew.push({ user: \"gpt\", message: `${data}`});\n    }\n\n    setChatLog(chatLogNew);\n\n}\n  function clearChat(){\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n  return (\n    <div className=\"App\">\n<aside className=\"sidemenu\"> \n  <h3 className=\"sidemenu-header\">Kari</h3>\n   <button className=\"side-menu-button\" onClick={clearChat}> Clear Chat </button> \n   <button className=\"side-menu-button\" onClick={() => window.open(\"https://forms.gle/6rQ4nsWddMqPgsCw9\")}> Sign Up for Waitlist </button> \n   <button className=\"side-menu-button\" onClick={() => window.open(\"src/components/stockAnalysis.js\")}> Stock Analysis Tool </button> </aside>\n      <section className=\"chatbox\">\n      {showOverlay && (\n          <div className=\"overlay-card\">\n            <div>\n              <h2>Kari.ai Financial Advisor</h2>\n            </div>\n          <div className=\"overlay-card-columns\">\n            <div className=\"overlay-card-column-example\">\n              <h3>Example Prompts:</h3>\n              <p onClick={() => setInput(\"What are the future trends in technology, and who are the biggest players?\")}>\"What are the future trends in technology, and who are the biggest players?\"</p>\n              <p onClick={() => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\")}>\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"</p>\n              <p onClick={() => setInput(\"What is your name and how can you actually help me with my finances?\")}>\"What is your name and how can you actually help me with my finances?\"</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Current Limitations:</h3>\n              <p>The chat may not have access to the most recent data on financial topics.</p>\n              <p>The chat does not have access to the user's personal financial situation or other relevant context.</p>\n              <p>The chat's answers may be limited by the quality and clarity of the prompts it receives.</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Future Features:</h3>\n              <p>Save Threads</p>\n              <p>Access to Live Data</p>\n              <p>Charting & Data Visualization</p>\n              <p>And more!</p>\n            </div>\n          </div>\n        </div>        \n        )}\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n    </div>\n    <div className=\"chat-input-holder\">\n  <div className=\"stock-screening-tool\">\n    <form onSubmit={handleSubmit}>\n      <input \n        rows=\"1\"\n        value={stockName}\n        onChange={(e) => setStockname(e.target.value)}\n        className=\"chat-input-textarea\"\n        placeholder=\"Enter Stock Name\"\n      />\n      <input \n        placeholder=\"From: dd/mm/yyyy\"\n        value={from}\n        onChange={e => setFrom(e.target.value)}\n      />\n      <input\n        placeholder=\"To: dd/mm/yyyy\"\n        value={to}\n        onChange={e => setTo(e.target.value)}\n      />\n      <select value={interval} onChange={e => setInterval(e.target.value)}>\n        <option value=\"1m\">1-minute</option>\n        <option value=\"5m\">5-minute</option>\n        <option value=\"1h\">1-hour</option>\n      </select>\n      <input \n        rows=\"1\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"chat-input-textarea\"\n        placeholder=\"Ask a question or give a command\"\n      />\n      <button className=\"submit-button\" onClick={() => {handleSubmit();}}>Submit</button>\n    </form>\n  </div>\n  <p className='below-chatbox'>January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out <a href=\"https://forms.gle/YvjMHj8kPX7xDX2H8\" target=\"_new\">this form</a> and run through the feedback questions as it will help me a lot.</p>\n</div>\n</section>\n</div>\n  );\n}\n\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className=\"clearfix\">\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\n    <div className=\"chat-message-center\">\n    </div> \n    <div className=\"message\">\n      {message.message}\n  </div>\n</div>\n</div>\n  )\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,cAAc;AACrB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SAASC,MAAM,QAAQ,mBAAmB;AAAC;AAE3CA,MAAM,EAAE;AAER,MAAMC,KAAK,GAAG,8BAA8B;AAC5C,MAAMC,MAAM,GAAG,qDAAqD;AACpE,MAAMC,MAAM,GAAG,yBAAyB;AAExC,SAASC,GAAG,GAAG;EAAA;EAGb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,EAAE,EAAEC,KAAK,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAGhC;EACA,MAAMsB,aAAa,GAAG,IAAIrB,aAAa,CAAC;IACtCG,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA;EACV,CAAC,CAAC;EACF,MAAMkB,MAAM,GAAG,IAAIrB,SAAS,CAACoB,aAAa,CAAC;;EAE3C;EACA,eAAeE,aAAa,CAACC,OAAO,EAAE;IACpC,MAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAG,2WAA0WJ,OAAQ,GAAE;MAC7XK,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;EACtC;;EAEE;EACA,eAAeC,gBAAgB,GAAG;IAChC,MAAMC,aAAa,GAAG,MAAMd,MAAM,CAACI,gBAAgB,CAAC;MAClDC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAG,ioBAAgoBnB,KAAM,GAAE;MACjpBoB,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,OAAOK,aAAa,CAACJ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;EAC3C;;EAGF;EACA,eAAeG,WAAW,CAACL,IAAI,EAAEM,YAAY,EAAE;IAC7C,MAAMb,QAAQ,GAAG,MAAMH,MAAM,CAACI,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,gBAAgB;MACvBC,MAAM,EAAG,wDAAuDnB,KAAM,IAAGF,SAAU,IAAGU,IAAK,IAAGE,EAAG,IAAGJ,QAAS,IAAGwB,IAAI,CAACC,SAAS,CAACR,IAAI,CAAE,GAAE;MACvIH,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;EACtC;EACF;EACA,eAAeO,YAAY,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAChB,IAAIC,UAAU,GAAG,CAAC,GAAGjC,OAAO,CAAC;IAE7BD,QAAQ,CAAC,EAAE,CAAC;IACZF,YAAY,CAAC,EAAE,CAAC;IAChBY,KAAK,CAAC,EAAE,CAAC;IACTF,OAAO,CAAC,EAAE,CAAC;IACXF,WAAW,CAAC,EAAE,CAAC;IACfF,cAAc,CAAC,KAAK,CAAC;IAErB,MAAM+B,aAAa,GAAG,MAAMV,gBAAgB,EAAE;IAE9C,MAAMW,OAAO,GAAG,mIAAmI;IACnJ,MAAMC,KAAK,GAAGF,aAAa,CAACE,KAAK,CAACD,OAAO,CAAC;IAE1C,MAAMvC,SAAS,GAAGwC,KAAK,CAACC,MAAM,CAACzC,SAAS;IACxC,MAAMU,IAAI,GAAG8B,KAAK,CAACC,MAAM,CAACC,QAAQ;IAClC,MAAM9B,EAAE,GAAG4B,KAAK,CAACC,MAAM,CAACE,MAAM;IAC9B,MAAMnC,QAAQ,GAAGgC,KAAK,CAACC,MAAM,CAACjC,QAAQ;IAEtCoC,OAAO,CAACC,GAAG,CAAC7C,SAAS,CAAC,CAAC,CAAC;IACxB4C,OAAO,CAACC,GAAG,CAACnC,IAAI,CAAC,CAAC,CAAC;IACnBkC,OAAO,CAACC,GAAG,CAACjC,EAAE,CAAC,CAAC,CAAC;IACjBgC,OAAO,CAACC,GAAG,CAACrC,QAAQ,CAAC,CAAC,CAAC;;IAKvB,IAAIN,KAAK,CAAC4C,IAAI,EAAE,IAAI5C,KAAK,CAAC6C,MAAM,GAAG,CAAC,EAAE;MACpCV,UAAU,CAACW,IAAI,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEhC,OAAO,EAAG,GAAEf,KAAM;MAAC,CAAC,CAAC;MACnD,MAAMgD,QAAQ,GAAGb,UAAU,CAACc,GAAG,CAAElC,OAAO,IAAKA,OAAO,CAACA,OAAO,CAAC,CAACmC,IAAI,CAAC,EAAE,CAAC;MACtE,MAAM3B,IAAI,GAAG,MAAMT,aAAa,CAACkC,QAAQ,CAAC;MAC1Cb,UAAU,CAACW,IAAI,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEhC,OAAO,EAAG,GAAEQ,IAAK;MAAC,CAAC,CAAC;IACrD;IAEApB,UAAU,CAACgC,UAAU,CAAC;EAE1B;EACE,SAASgB,SAAS,GAAE;IAClBhD,UAAU,CAAC,EAAE,CAAC;IACdE,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACxB;MAAO,SAAS,EAAC,UAAU;MAAA,wBACzB;QAAI,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACxC;QAAQ,SAAS,EAAC,kBAAkB;QAAC,OAAO,EAAE8C,SAAU;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9E;QAAQ,SAAS,EAAC,kBAAkB;QAAC,OAAO,EAAE,MAAMC,MAAM,CAACC,IAAI,CAAC,qCAAqC,CAAE;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAS,eACvI;QAAQ,SAAS,EAAC,kBAAkB;QAAC,OAAO,EAAE,MAAMD,MAAM,CAACC,IAAI,CAAC,iCAAiC,CAAE;QAAA,UAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAS,KAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eACxI;MAAS,SAAS,EAAC,SAAS;MAAA,WAC3BjD,WAAW,iBACR;QAAK,SAAS,EAAC,cAAc;QAAA,wBAC3B;UAAA,uBACE;YAAA,UAAI;UAAyB;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QAC9B,eACR;UAAK,SAAS,EAAC,sBAAsB;UAAA,wBACnC;YAAK,SAAS,EAAC,6BAA6B;YAAA,wBAC1C;cAAA,UAAI;YAAgB;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAG,OAAO,EAAE,MAAMH,QAAQ,CAAC,4EAA4E,CAAE;cAAA,UAAC;YAA4E;cAAA;cAAA;cAAA;YAAA,QAAI,eAC1L;cAAG,OAAO,EAAE,MAAMA,QAAQ,CAAC,wGAAwG,CAAE;cAAA,UAAC;YAAwG;cAAA;cAAA;cAAA;YAAA,QAAI,eAClP;cAAG,OAAO,EAAE,MAAMA,QAAQ,CAAC,sEAAsE,CAAE;cAAA,UAAC;YAAsE;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1K,eACN;YAAK,SAAS,EAAC,qBAAqB;YAAA,wBAClC;cAAA,UAAI;YAAoB;cAAA;cAAA;cAAA;YAAA,QAAK,eAC7B;cAAA,UAAG;YAAyE;cAAA;cAAA;cAAA;YAAA,QAAI,eAChF;cAAA,UAAG;YAAmG;cAAA;cAAA;cAAA;YAAA,QAAI,eAC1G;cAAA,UAAG;YAAwF;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3F,eACN;YAAK,SAAS,EAAC,qBAAqB;YAAA,wBAClC;cAAA,UAAI;YAAgB;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAA,UAAG;YAAY;cAAA;cAAA;cAAA;YAAA,QAAI,eACnB;cAAA,UAAG;YAAmB;cAAA;cAAA;cAAA;YAAA,QAAI,eAC1B;cAAA,UAAG;YAA6B;cAAA;cAAA;cAAA;YAAA,QAAI,eACpC;cAAA,UAAG;YAAS;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QACZ;QAAA;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QAEP,eACD;QAAK,SAAS,EAAC,UAAU;QAAA,UACtBC,OAAO,CAAC+C,GAAG,CAAC,CAAClC,OAAO,EAAEuC,KAAK,kBAC1B,QAAC,WAAW;UAAa,OAAO,EAAEvC;QAAQ,GAAxBuC,KAAK;UAAA;UAAA;UAAA;QAAA,QACxB;MAAC;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,mBAAmB;QAAA,wBACpC;UAAK,SAAS,EAAC,sBAAsB;UAAA,uBACnC;YAAM,QAAQ,EAAEtB,YAAa;YAAA,wBAC3B;cACE,IAAI,EAAC,GAAG;cACR,KAAK,EAAElC,SAAU;cACjB,QAAQ,EAAGmC,CAAC,IAAKlC,YAAY,CAACkC,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;cAC9C,SAAS,EAAC,qBAAqB;cAC/B,WAAW,EAAC;YAAkB;cAAA;cAAA;cAAA;YAAA,QAC9B,eACF;cACE,WAAW,EAAC,kBAAkB;cAC9B,KAAK,EAAEhD,IAAK;cACZ,QAAQ,EAAEyB,CAAC,IAAIxB,OAAO,CAACwB,CAAC,CAACsB,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QACvC,eACF;cACE,WAAW,EAAC,gBAAgB;cAC5B,KAAK,EAAE9C,EAAG;cACV,QAAQ,EAAEuB,CAAC,IAAItB,KAAK,CAACsB,CAAC,CAACsB,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QACrC,eACF;cAAQ,KAAK,EAAElD,QAAS;cAAC,QAAQ,EAAE2B,CAAC,IAAI1B,WAAW,CAAC0B,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;cAAA,wBAClE;gBAAQ,KAAK,EAAC,IAAI;gBAAA,UAAC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAS,eACpC;gBAAQ,KAAK,EAAC,IAAI;gBAAA,UAAC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAS,eACpC;gBAAQ,KAAK,EAAC,IAAI;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA,QAC3B,eACT;cACE,IAAI,EAAC,GAAG;cACR,KAAK,EAAExD,KAAM;cACb,QAAQ,EAAGiC,CAAC,IAAKhC,QAAQ,CAACgC,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;cAC1C,SAAS,EAAC,qBAAqB;cAC/B,WAAW,EAAC;YAAkC;cAAA;cAAA;cAAA;YAAA,QAC9C,eACF;cAAQ,SAAS,EAAC,eAAe;cAAC,OAAO,EAAE,MAAM;gBAACxB,YAAY,EAAE;cAAC,CAAE;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA;QAC9E;UAAA;UAAA;UAAA;QAAA,QACH,eACN;UAAG,SAAS,EAAC,eAAe;UAAA,WAAC,uGAAqG;YAAG,IAAI,EAAC,qCAAqC;YAAC,MAAM,EAAC,MAAM;YAAA,UAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAAI,qEAAiE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5Q;IAAA;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEN;AAAC,GAtLQnC,GAAG;AAAA,KAAHA,GAAG;AAyLZ,MAAM4D,WAAW,GAAG,QAAiB;EAAA,IAAhB;IAAE1C;EAAQ,CAAC;EAC9B,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBACzB;MAAK,SAAS,EAAG,gBAAeA,OAAO,CAACgC,IAAI,KAAK,KAAK,IAAI,SAAU,EAAE;MAAA,wBACtE;QAAK,SAAS,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAC9B,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,UACrBhC,OAAO,CAACA;MAAO;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACA;AAEN,CAAC;AAAA,MAZK0C,WAAW;AAajB,eAAe5D,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}