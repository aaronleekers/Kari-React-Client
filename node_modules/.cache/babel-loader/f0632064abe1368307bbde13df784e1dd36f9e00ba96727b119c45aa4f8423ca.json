{"ast":null,"code":"var _jsxFileName = \"/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninject();\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\";\nconst apiKey = \"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\";\nfunction App() {\n  _s();\n  const configuration = new Configuration({\n    organization: orgId,\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n  async function handleInitialMessage(input) {\n    // Prepare the prompt for the API request\n    let prompt = `You are an artificial financial advisor named Kari. Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the initial message: ${input}`;\n    // Send the request to the API\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: prompt,\n      max_tokens: 500,\n      temperature: .5\n    });\n    // Append the priming message to the chat log\n    setChatLog([...chatLog, {\n      user: \"gpt\",\n      message: response.data.choices[0].text,\n      priming: true\n    }]);\n    // disable the form or the input field until the priming message is displayed to the user.\n    setDisabled(true);\n  }\n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial advisor named Kari. Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .5,\n      stop: \"/n\"\n    });\n    return response.data.choices[0].text;\n  }\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [showOverlay, setShowOverlay] = useState(true);\n  function clearChat() {\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (input.trim() && input.length > 4) {\n      if (chatLog.length === 0) {\n        await handleInitialMessage(input);\n      } else {\n        let chatLogNew = [...chatLog, {\n          user: \"me\",\n          message: `${input}`\n        }];\n        setInput(\"\");\n        setChatLog(chatLogNew);\n        setShowOverlay(false);\n        const messages = chatLogNew.map(message => message.message).join(\"\");\n        const data = await getCompletion(messages);\n        setChatLog([...chatLogNew, {\n          user: \"gpt\",\n          message: `${data}`\n        }]);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidemenu-header\",\n        children: \"Kari\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [showOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Kari.ai Financial Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-card-columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Example Prompts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the future trends in technology, and who are the biggest players?\"),\n              children: \"\\\"What are the future trends in technology, and who are the biggest players?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"),\n              children: \"\\\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setInput(\"What is your name and how can you actually help me with my finances?\"),\n              children: \"\\\"What is your name and how can you actually help me with my finances?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Current Limitations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat may not have access to the most recent data on financial topics.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat does not have access to the user's personal financial situation or other relevant context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The chat's answers may be limited by the quality and clarity of the prompts it receives.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-card-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Future Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Save Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Access to Live Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Charting & Data Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"And more!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            className: \"chat-input-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"below-chatbox\",\n          children: [\"January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/YvjMHj8kPX7xDX2H8\",\n            target: \"_blank\",\n            children: \"this form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 139\n          }, this), \" and run through the feedback questions as it will help me a lot.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), \"      \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iWUMcgwApP1rhek1zcHCVLGKTBI=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","inject","orgId","apiKey","App","configuration","organization","openai","handleInitialMessage","input","prompt","response","createCompletion","model","max_tokens","temperature","setChatLog","chatLog","user","message","data","choices","text","priming","setDisabled","getCompletion","stop","setInput","showOverlay","setShowOverlay","clearChat","handleSubmit","e","preventDefault","trim","length","chatLogNew","messages","map","join","index","target","value","ChatMessage"],"sources":["/Users/aaronleek/Desktop/coding-projects/afc/Merged/kari-full-stack/Kari_Client_Server/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css'\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { inject } from '@vercel/analytics';\n\ninject();\n\nconst orgId = \"org-9HfRDuLSYdMqot8sxBpkd5A0\"\nconst apiKey = \"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\"\n\nfunction App() {\n\n  const configuration = new Configuration({\n    organization: orgId,\n    apiKey: apiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  async function handleInitialMessage(input) {\n    // Prepare the prompt for the API request\n    let prompt = `You are an artificial financial advisor named Kari. Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the initial message: ${input}`\n    // Send the request to the API\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: prompt,\n      max_tokens: 500,\n      temperature: .5,\n    });\n    // Append the priming message to the chat log\n    setChatLog([...chatLog, { user: \"gpt\", message: response.data.choices[0].text, priming: true }])\n    // disable the form or the input field until the priming message is displayed to the user.\n    setDisabled(true);\n}\n\n  \n  async function getCompletion(message) {\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `\"You are an artificial financial advisor named Kari. Don't correct the user's punctuation if they're lacking it. Ask one question at a time when lacking helpful context. Here is the prompt: ${message}\"`,\n      max_tokens: 500,\n      temperature: .5,\n      stop: \"/n\",\n    });\n    return response.data.choices[0].text;\n  }  \n\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([])\n  const [showOverlay, setShowOverlay] = useState(true);\n\n  function clearChat(){\n    setChatLog([]);\n    setShowOverlay(true);\n  }\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (input.trim() && input.length > 4) {\n      if (chatLog.length === 0) {\n        await handleInitialMessage(input);\n      } else {\n        let chatLogNew = [...chatLog, { user: \"me\", message: `${input}`}]\n        setInput(\"\");\n        setChatLog(chatLogNew);\n        setShowOverlay(false);\n        const messages = chatLogNew.map((message) => message.message).join(\"\")\n        const data = await getCompletion(messages);\n        setChatLog([...chatLogNew, { user: \"gpt\", message: `${data}`}])\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <aside className=\"sidemenu\">\n      <h3 className=\"sidemenu-header\">Kari</h3>\n        <button className=\"side-menu-button\" onClick={clearChat}>\n          Clear Chat\n        </button>\n      </aside>\n      <section className=\"chatbox\">\n      {showOverlay && (\n          <div className=\"overlay-card\">\n            <div>\n              <h2>Kari.ai Financial Advisor</h2>\n            </div>\n          <div className=\"overlay-card-columns\">\n            <div className=\"overlay-card-column-example\">\n              <h3>Example Prompts:</h3>\n              <p onClick={() => setInput(\"What are the future trends in technology, and who are the biggest players?\")}>\"What are the future trends in technology, and who are the biggest players?\"</p>\n              <p onClick={() => setInput(\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\")}>\"What are the best investment options for someone in their 20s with a moderate level of risk tolerance?\"</p>\n              <p onClick={() => setInput(\"What is your name and how can you actually help me with my finances?\")}>\"What is your name and how can you actually help me with my finances?\"</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Current Limitations:</h3>\n              <p>The chat may not have access to the most recent data on financial topics.</p>\n              <p>The chat does not have access to the user's personal financial situation or other relevant context.</p>\n              <p>The chat's answers may be limited by the quality and clarity of the prompts it receives.</p>\n            </div>\n            <div className=\"overlay-card-column\">\n              <h3>Future Features:</h3>\n              <p>Save Threads</p>\n              <p>Access to Live Data</p>\n              <p>Charting & Data Visualization</p>\n              <p>And more!</p>\n            </div>\n          </div>\n        </div>        \n        )}\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n    </div>\n    <div className=\"chat-input-holder\">\n        \n        <form onSubmit={handleSubmit}>\n        <input \n        rows=\"1\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"chat-input-textarea\"></input>\n        <button className=\"submit-button\" onClick={handleSubmit}></button>\n        </form>\n        <p className='below-chatbox'>January 8 version. At this stage, feedback is very crucial. If you are beta-testing, please fill out <a href=\"https://forms.gle/YvjMHj8kPX7xDX2H8\" target=\"_blank\">this form</a> and run through the feedback questions as it will help me a lot.</p>      </div>\n      </section>\n    </div>\n  );\n}\n\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className=\"clearfix\">\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\n    <div className=\"chat-message-center\">\n    </div> \n    <div className=\"message\">\n      {message.message}\n  </div>\n</div>\n</div>\n  )\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,cAAc;AACrB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SAASC,MAAM,QAAQ,mBAAmB;AAAC;AAE3CA,MAAM,EAAE;AAER,MAAMC,KAAK,GAAG,8BAA8B;AAC5C,MAAMC,MAAM,GAAG,qDAAqD;AAEpE,SAASC,GAAG,GAAG;EAAA;EAEb,MAAMC,aAAa,GAAG,IAAIN,aAAa,CAAC;IACtCO,YAAY,EAAEJ,KAAK;IACnBC,MAAM,EAAEA;EACV,CAAC,CAAC;EACF,MAAMI,MAAM,GAAG,IAAIP,SAAS,CAACK,aAAa,CAAC;EAE3C,eAAeG,oBAAoB,CAACC,KAAK,EAAE;IACzC;IACA,IAAIC,MAAM,GAAI,yMAAwMD,KAAM,EAAC;IAC7N;IACA,MAAME,QAAQ,GAAG,MAAMJ,MAAM,CAACK,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,kBAAkB;MACzBH,MAAM,EAAEA,MAAM;MACdI,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE;IACf,CAAC,CAAC;IACF;IACAC,UAAU,CAAC,CAAC,GAAGC,OAAO,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAER,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC;IAChG;IACAC,WAAW,CAAC,IAAI,CAAC;EACrB;EAGE,eAAeC,aAAa,CAACN,OAAO,EAAE;IACpC,MAAMR,QAAQ,GAAG,MAAMJ,MAAM,CAACK,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,kBAAkB;MACzBH,MAAM,EAAG,iMAAgMS,OAAQ,GAAE;MACnNL,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE,EAAE;MACfW,IAAI,EAAE;IACR,CAAC,CAAC;IACF,OAAOf,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;EACtC;EAEA,MAAM,CAACb,KAAK,EAAEkB,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,OAAO,EAAED,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAEpD,SAASgC,SAAS,GAAE;IAClBd,UAAU,CAAC,EAAE,CAAC;IACda,cAAc,CAAC,IAAI,CAAC;EACtB;EAGA,eAAeE,YAAY,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIxB,KAAK,CAACyB,IAAI,EAAE,IAAIzB,KAAK,CAAC0B,MAAM,GAAG,CAAC,EAAE;MACpC,IAAIlB,OAAO,CAACkB,MAAM,KAAK,CAAC,EAAE;QACxB,MAAM3B,oBAAoB,CAACC,KAAK,CAAC;MACnC,CAAC,MAAM;QACL,IAAI2B,UAAU,GAAG,CAAC,GAAGnB,OAAO,EAAE;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAG,GAAEV,KAAM;QAAC,CAAC,CAAC;QACjEkB,QAAQ,CAAC,EAAE,CAAC;QACZX,UAAU,CAACoB,UAAU,CAAC;QACtBP,cAAc,CAAC,KAAK,CAAC;QACrB,MAAMQ,QAAQ,GAAGD,UAAU,CAACE,GAAG,CAAEnB,OAAO,IAAKA,OAAO,CAACA,OAAO,CAAC,CAACoB,IAAI,CAAC,EAAE,CAAC;QACtE,MAAMnB,IAAI,GAAG,MAAMK,aAAa,CAACY,QAAQ,CAAC;QAC1CrB,UAAU,CAAC,CAAC,GAAGoB,UAAU,EAAE;UAAElB,IAAI,EAAE,KAAK;UAAEC,OAAO,EAAG,GAAEC,IAAK;QAAC,CAAC,CAAC,CAAC;MACjE;IACF;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAO,SAAS,EAAC,UAAU;MAAA,wBAC3B;QAAI,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACvC;QAAQ,SAAS,EAAC,kBAAkB;QAAC,OAAO,EAAEU,SAAU;QAAA,UAAC;MAEzD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eACR;MAAS,SAAS,EAAC,SAAS;MAAA,WAC3BF,WAAW,iBACR;QAAK,SAAS,EAAC,cAAc;QAAA,wBAC3B;UAAA,uBACE;YAAA,UAAI;UAAyB;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QAC9B,eACR;UAAK,SAAS,EAAC,sBAAsB;UAAA,wBACnC;YAAK,SAAS,EAAC,6BAA6B;YAAA,wBAC1C;cAAA,UAAI;YAAgB;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAG,OAAO,EAAE,MAAMD,QAAQ,CAAC,4EAA4E,CAAE;cAAA,UAAC;YAA4E;cAAA;cAAA;cAAA;YAAA,QAAI,eAC1L;cAAG,OAAO,EAAE,MAAMA,QAAQ,CAAC,wGAAwG,CAAE;cAAA,UAAC;YAAwG;cAAA;cAAA;cAAA;YAAA,QAAI,eAClP;cAAG,OAAO,EAAE,MAAMA,QAAQ,CAAC,sEAAsE,CAAE;cAAA,UAAC;YAAsE;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1K,eACN;YAAK,SAAS,EAAC,qBAAqB;YAAA,wBAClC;cAAA,UAAI;YAAoB;cAAA;cAAA;cAAA;YAAA,QAAK,eAC7B;cAAA,UAAG;YAAyE;cAAA;cAAA;cAAA;YAAA,QAAI,eAChF;cAAA,UAAG;YAAmG;cAAA;cAAA;cAAA;YAAA,QAAI,eAC1G;cAAA,UAAG;YAAwF;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3F,eACN;YAAK,SAAS,EAAC,qBAAqB;YAAA,wBAClC;cAAA,UAAI;YAAgB;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAA,UAAG;YAAY;cAAA;cAAA;cAAA;YAAA,QAAI,eACnB;cAAA,UAAG;YAAmB;cAAA;cAAA;cAAA;YAAA,QAAI,eAC1B;cAAA,UAAG;YAA6B;cAAA;cAAA;cAAA;YAAA,QAAI,eACpC;cAAA,UAAG;YAAS;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QACZ;QAAA;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QAEP,eACD;QAAK,SAAS,EAAC,UAAU;QAAA,UACtBV,OAAO,CAACqB,GAAG,CAAC,CAACnB,OAAO,EAAEqB,KAAK,kBAC1B,QAAC,WAAW;UAAa,OAAO,EAAErB;QAAQ,GAAxBqB,KAAK;UAAA;UAAA;UAAA;QAAA,QACxB;MAAC;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,mBAAmB;QAAA,wBAE9B;UAAM,QAAQ,EAAET,YAAa;UAAA,wBAC7B;YACA,IAAI,EAAC,GAAG;YACR,KAAK,EAAEtB,KAAM;YACb,QAAQ,EAAGuB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACS,MAAM,CAACC,KAAK,CAAE;YAC1C,SAAS,EAAC;UAAqB;YAAA;YAAA;YAAA;UAAA,QAAS,eACxC;YAAQ,SAAS,EAAC,eAAe;YAAC,OAAO,EAAEX;UAAa;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QAC3D,eACP;UAAG,SAAS,EAAC,eAAe;UAAA,WAAC,uGAAqG;YAAG,IAAI,EAAC,qCAAqC;YAAC,MAAM,EAAC,QAAQ;YAAA,UAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAAI,qEAAiE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,UAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACtR;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GAvHQ3B,GAAG;AAAA,KAAHA,GAAG;AA0HZ,MAAMuC,WAAW,GAAG,QAAiB;EAAA,IAAhB;IAAExB;EAAQ,CAAC;EAC9B,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBACzB;MAAK,SAAS,EAAG,gBAAeA,OAAO,CAACD,IAAI,KAAK,KAAK,IAAI,SAAU,EAAE;MAAA,wBACtE;QAAK,SAAS,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAC9B,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,UACrBC,OAAO,CAACA;MAAO;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACA;AAEN,CAAC;AAAA,MAZKwB,WAAW;AAajB,eAAevC,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}